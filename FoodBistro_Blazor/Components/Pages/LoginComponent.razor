@page "/"
@page "/login"

@rendermode InteractiveServer
@using FoodBistro_Blazor.Models
@using FoodBistro_Blazor.Services

@inject NavigationManager Navigation
@inject IUserService userService

<div class="d-flex vh-100 position-relative overflow-hidden" style="background: url('/Assets/bglogin.jpg') no-repeat center center; background-size: cover; color: #eaeaea;">
    <div class="background-blur" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0, 0, 0, 0.5);"></div>

    <div class="d-flex justify-content-center align-items-center w-100 position-relative">
        <div class="card p-4 shadow" style="width: 22rem; background-color: #333; color: #eaeaea;">
            <h2 class="text-center mb-4">Log-In</h2>

            <EditForm Model="@newUser_" OnValidSubmit="HandleLogin" FormName="loginForm">

                <DataAnnotationsValidator></DataAnnotationsValidator>
                @* <ValidationSummary></ValidationSummary> *@ @*Shows all the validations masgs*@
                <hr />

                <div class="mb-3">
                    <label for="emailInput" class="form-label text-light">Email</label>
                    <InputText @bind-Value="newUser_.Email" id="emailInput_" class="form-control bg-dark text-light" placeholder="name@example.com" />
                    <ValidationMessage For="@(()=>newUser_.Email)"></ValidationMessage>  @*For showing error msgs for individual fields*@
                </div>

                <div class="mb-3">
                    <label for="passwordInput" class="form-label text-light">Password</label>
                    <InputText @bind-Value="newUser_.Password" id="passwordInput_" type="password" class="form-control bg-dark text-light" placeholder="password" />
                    <ValidationMessage For="@(()=>newUser_.Password)"></ValidationMessage>

                </div>

                <div class="d-flex justify-content-center">
                    <button type="submit" class="btn btn-primary w-75">Log in</button>
                    @* <input type="submit" value="Log In" /> *@
                </div>

                <div class="text-danger text-center mt-3">
                </div>

                <div class="text-center mt-4">
                    <p>New Here? <a href="/signup" class="text-decoration-none">SignUp</a></p>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private User newUser_ = new User();

    private async Task HandleLogin()
    {
        bool result = userService.AuthenticateUser(newUser_.Email, newUser_.Password);
        if (result == true)
        {
            Navigation.NavigateTo("/home");
        }
        else
        {
            Navigation.NavigateTo("/xyz");
        }
    }
}

